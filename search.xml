<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>linux</title>
    <url>/2019/11/13/linux/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">anaconda 源文件的下载</span><br><span class="line">wget + 链接   //下载一个应用</span><br><span class="line">sudo bash + 下载文件</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#添加环境遍历操作</span><br><span class="line">vi  ~/.bashrc</span><br><span class="line">在文件中添加 export PATH=/home/aeasringnar/anaconda3/bin:$PATH  语句</span><br><span class="line">如果不行运行 source ~/.bashrc</span><br></pre></td></tr></table></figure>
<p><strong>【Linux】conda: command not found解决办法 </strong></p>
<p>参考环境变量配置</p>
<p>anaconda 命令的运用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda list 查看</span><br><span class="line">conda  activate + 环境名字  --&gt;激活对应的环境</span><br><span class="line">conda deactivate + 环境名 --&gt;退出环境</span><br><span class="line">conda create --name &lt;env_name&gt; &lt;package_names&gt; #创建某一个环境</span><br><span class="line">查看conda中存在的环境变量命令</span><br><span class="line">conda info --envs</span><br><span class="line">例如：</span><br><span class="line">	创建一个python3.7的环境</span><br><span class="line">	conda create -n venv pip python=3.7  # select python version</span><br><span class="line">	创建一个python2.7的环境</span><br><span class="line">	conda create -n venv1 pip python=2.7  # select python version</span><br></pre></td></tr></table></figure>
<p>jupyterLab比jupyter notebook更加好用</p>
<p>配置jupyter 远程访问</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-config  #创建配置文件的命令</span><br><span class="line"></span><br><span class="line">jupyter 5.0开始提供自动生成远程访问密码的操作：</span><br><span class="line">$ jupyter notebook password</span><br><span class="line">Enter password:  ****</span><br><span class="line">Verify password: ****</span><br><span class="line">[NotebookPasswordApp] Wrote hashed password to /Users/you/.jupyter/jupyter_notebook_config.json</span><br><span class="line"></span><br><span class="line">手动创建</span><br><span class="line">In [1]: from notebook.auth import passwd</span><br><span class="line">In [2]: passwd()</span><br><span class="line">Enter password:</span><br><span class="line">Verify password:</span><br><span class="line">Out[2]: &apos;sha1:67c9e60bb8b6:9ffede0825894254b2e042ea597d771089e11aed&apos;</span><br><span class="line"></span><br><span class="line">c.NotebookApp.password = u&apos;sha1:67c9e60bb8b6:9ffede0825894254b2e042ea597d771089e11aed&apos;</span><br></pre></td></tr></table></figure>
<p>接下来就是修改对应的配置文件（jupyter_notebook_config.py中修改）</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-config 生成配置文件</span><br><span class="line">vim ~/.jupyter/jupyter_notebook_config.py</span><br><span class="line">c.NotebookApp.ip=&apos;*&apos;</span><br><span class="line">c.NotebookApp.password = u&apos;sha:ce...刚才复制的那个密文&apos;</span><br><span class="line">c.NotebookApp.open_browser = False</span><br><span class="line">c.NotebookApp.port =8888 #可自行指定一个端口, 访问时使用该端口</span><br><span class="line">默认打开目录设置：</span><br><span class="line">c.NotebookApp.notebook_dir = u&apos;/home/xxx&apos;</span><br></pre></td></tr></table></figure>
<p><strong>mysql解压版安装参考教程</strong></p>
<p><a href="https://blog.csdn.net/lsl520hah/article/details/81474376" target="_blank" rel="noopener">https://blog.csdn.net/lsl520hah/article/details/81474376</a></p>
<p>注意如果提示mysql: unknown variable ‘character-set-server=utf8’ </p>
<p>将my.ini中的’character-set-server=utf8’  用#注释一下就能解决问题</p>
<p>mysql z账号:root   密码:123456</p>
<p><strong>Xftp 5连接阿里云</strong> </p>
<p><a href="https://blog.csdn.net/u010523770/article/details/53053967" target="_blank" rel="noopener">https://blog.csdn.net/u010523770/article/details/53053967</a></p>
<p><strong>jupyter kernal操作</strong></p>
<p>查看列表<code>jupyter kernelspec list</code></p>
<p>删除指定kernel：<code>jupyter kernelspec remove icsharpkernel</code></p>
<p>Linux压缩和解压常用的命令</p>
<ul>
<li><p>tar命令</p>
<p>解包：tar -zxvf FileName.tar</p>
<p>　　打包：tar czvf FileName.tar DirName</p>
</li>
</ul>
<ul>
<li><p>gz命令</p>
<p>解压1：gunzip FileName.gz</p>
<p>　　解压2：gzip -d FileName.gz</p>
<p>　　压缩：gzip FileName</p>
<p>　　.tar.gz 和 .tgz</p>
<p>　　解压：tar zxvf FileName.tar.gz</p>
<p>　　压缩：tar zcvf FileName.tar.gz DirName</p>
<p> 压缩多个文件：tar zcvf FileName.tar.gz DirName1 DirName2 DirName3 …</p>
</li>
</ul>
<ul>
<li><p>bz2命令</p>
<p>解压1：bzip2 -d FileName.bz2</p>
<p>　　解压2：bunzip2 FileName.bz2</p>
<p>　　压缩： bzip2 -z FileName</p>
<p>　　.tar.bz2</p>
<p>　　解压：tar jxvf FileName.tar.bz2</p>
<p>　　压缩：tar jcvf FileName.tar.bz2 DirName</p>
</li>
</ul>
<ul>
<li><p>bz命令</p>
<p>解压1：bzip2 -d FileName.bz</p>
<p>　　解压2：bunzip2 FileName.bz</p>
<p>　　压缩：未知</p>
<p>　　.tar.bz</p>
<p>　　解压：tar jxvf FileName.tar.bz</p>
</li>
</ul>
<ul>
<li><p>Z命令</p>
<p>解压：uncompress FileName.Z</p>
<p>　　压缩：compress FileName</p>
<p>　　.tar.Z</p>
<p>　　解压：tar Zxvf FileName.tar.Z</p>
<p>　　压缩：tar Zcvf FileName.tar.Z DirName</p>
</li>
</ul>
<ul>
<li><p>zip命令</p>
<p>解压：unzip FileName.zip</p>
<p>　　压缩：zip FileName.zip DirName</p>
</li>
</ul>
<p>Linux递归创建文件夹的方式</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -vp 目录1/目录2/目录3</span><br><span class="line">-p, --parents 可以是一个路径名称。此时若路径中的某些目录尚不存在,加上此选项后,系统将自动建立好那些尚不存在的目录,即一次可以建立多个目录;</span><br><span class="line"></span><br><span class="line">-v, --verbose 每次创建新目录都显示信息</span><br></pre></td></tr></table></figure>
<p>Ubantu16的MongDB配置参考</p>
<p><a href="https://blog.csdn.net/zn505119020/article/details/81331808" target="_blank" rel="noopener">https://blog.csdn.net/zn505119020/article/details/81331808</a></p>
]]></content>
  </entry>
  <entry>
    <title>hellow-world-myblog</title>
    <url>/2019/11/10/hellow-world-myblog/</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
